#version 330 core

layout ( points ) in;
in float	outLifetime[];

uniform mat4 mod_mat;
uniform mat4 view_proj_mat;
uniform float particleSize;
uniform float invLifeTime;

layout ( triangle_strip, max_vertices = 6 ) out;
out vec2	uv_coord;
out float	transparency;


void main ()
{
	if ( outLifetime[ 0 ] > 0.0 )
	{
		float factor = particleSize * ( 1.0 - outLifetime[ 0 ] * invLifeTime );

		vec4 vertex1 = mod_mat * vec4 ( -factor, -factor, 0.0, 1.0 ) + gl_in[ 0 ].gl_Position;
		vec4 vertex2 = mod_mat * vec4 ( factor, -factor, 0.0, 1.0 ) + gl_in[ 0 ].gl_Position;
		vec4 vertex3 = mod_mat * vec4 ( factor, factor, 0.0, 1.0 ) + gl_in[ 0 ].gl_Position;
		vec4 vertex4 = mod_mat * vec4 ( -factor, factor, 0.0, 1.0 ) + gl_in[ 0 ].gl_Position;
		
		vertex1 = view_proj_mat * vertex1;
		vertex2 = view_proj_mat * vertex2;
		vertex3 = view_proj_mat * vertex3;
		vertex4 = view_proj_mat * vertex4;

		float trans = outLifetime[ 0 ] * invLifeTime;

		gl_Position = vertex3;
		transparency = trans;
		uv_coord = vec2 ( 1.0, 1.0 );
		EmitVertex ();

		gl_Position = vertex2;
		transparency = trans;
		uv_coord = vec2 ( 1.0, 0.0 );
		EmitVertex ();
		
		gl_Position = vertex1;
		transparency = trans;
		uv_coord = vec2 ( 0.0, 0.0 );
		EmitVertex ();		
		EndPrimitive ();

		gl_Position = vertex1;
		transparency = trans;
		uv_coord = vec2 ( 0.0, 0.0 );
		EmitVertex ();

		gl_Position = vertex4;
		transparency = trans;
		uv_coord = vec2 ( 0.0, 1.0 );
		EmitVertex ();

		gl_Position = vertex3;
		transparency = trans;
		uv_coord = vec2 ( 1.0, 1.0 );
		EmitVertex ();
		EndPrimitive ();
	}
}